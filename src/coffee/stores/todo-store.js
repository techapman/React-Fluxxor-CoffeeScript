// Generated by CoffeeScript 1.9.2
var CHANGE, Fluxxor, TodoStore, constants, uuid;

Fluxxor = require('fluxxor');

uuid = require('uuid');

constants = require('../constants/todo-constants');

CHANGE = 'change';

TodoStore = Fluxxor.createStore({
  initialize: function() {
    this.todos = {};
    return this.bindActions(constants.ADD_TODO, this.onAddTodo, constants.TOGGLE_TODO, this.onToggleComplete, constants.CLEAR_TODOS, this.onClearTodos);
  },
  onAddTodo: function(payload) {
    var identifier, newTodo;
    identifier = this._uniqueID();
    newTodo = {
      text: payload.text,
      id: identifier,
      complete: false
    };
    this.todos[identifier] = newTodo;
    return this.emit(CHANGE);
  },
  onToggleComplete: function(payload) {
    payload.todo.complete = !payload.todo.complete;
    return this.emit(CHANGE);
  },
  onClearTodos: function() {
    var id, newTodoObject, ref, todo;
    newTodoObject = {};
    ref = this.todos;
    for (id in ref) {
      todo = ref[id];
      if (!todo.complete) {
        newTodoObject[id] = todo;
      }
    }
    this.todos = newTodoObject;
    return this.emit(CHANGE);
  },
  getState: function() {
    var id, todo, todoArray;
    todoArray = (function() {
      var ref, results;
      ref = this.todos;
      results = [];
      for (id in ref) {
        todo = ref[id];
        results.push(todo);
      }
      return results;
    }).call(this);
    return {
      todos: todoArray
    };
  },
  _uniqueID: function() {
    return uuid.v4();
  }
});

module.exports = TodoStore;
